html {
  box-sizing: border-box;
/* Nicer looking fonts for OS X and iOS */
  -webkit-font-smoothing: antialiased;
}
* {
/* Later browsers can be more easily reset with `all: unset`. It's commented out by default here as it's pretty heavy handed. However, further declarations on these elements follow for older browsers. If you uncomment this property/value REMEMBER accessibility for outlines etc. This undoes a LOT of default UA styling, use with EXTREME caution!! */
/* all: unset; */
/* This prevents users being able to select text. Stops long presses in iOS bringing up copy/paste UI for example. Note below we specifically switch user-select on for inputs for the sake of Safari. Bug here: https://bugs.webkit.org/show_bug.cgi?id=82692 */
/* user-select: none; */
/* This gets -webkit specific prefix as it is a non W3C property */
  -webkit-tap-highlight-color: rgba(255,255,255,0);
/* Older Androids need this instead */
  -webkit-tap-highlight-color: transparent;
/* Most devs find border-box easier to reason about. However by inheriting we can mix box-sizing approaches. */
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
*::before,
*::after {
  box-sizing: border-box;
}
input[type],
[contenteditable] {
  user-select: text;
}
body,
h1,
h2,
h3,
h4,
h5,
h6,
p {
/* We will be adding our own margin to these elements as needed. */
  margin: 0;
/* You'll want to set font-size as needed. */
  font-size: 1rem;
/* No bold for h tags unless you want it */
  font-weight: 400;
}
base,
basefont,
datalist,
head,
meta,
script,
style,
title,
noembed,
param,
template {
  display: none;
}
a {
  text-decoration: none;
  color: inherit;
}
b {
  font-weight: 400;
}
em,
i,
address {
  font-style: normal;
}
button {
  appearance: none;
  background-color: transparent;
  border: 0;
  padding: 0;
  font-family: inherit;
}
a:focus,
button:focus {
  outline: 0;
}
pre {
  white-space: normal;
}
input,
fieldset {
  border: 0;
  padding: 0;
  margin: 0;
/* inputs and fieldset defaults to having a min-width equal to its content in Chrome and Firefox (https://code.google.com/p/chromium/issues/detail?id=560762), we may not want that */
  min-width: 0;
/* Reset the font size and family */
  font-size: 1rem;
  font-family: inherit;
}
input::-ms-clear {
  display: none;
}
input:focus {
  outline: 0;
}
input[type="number"] {
/* Mozilla shows the spinner UI on number inputs unless we use this: */
  -moz-appearance: textfield;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  appearance: none;
}
svg {
  display: block;
}
img {
/* Make images behave responsively. Here they will scale up to 100% of their natural size */
  max-width: 100%;
/* Make images display as a block (UA default is usually inline) */
  display: block;
}
select:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 #000;
}
ul,
li {
  list-style: none;
  margin: 0;
  padding: 0;
}
body {
  box-sizing: border-box;
}
